.\" File generated using by MAQAO.
.TH MAQAO "1" "2022/11/16" "MAQAO 2.16.0" "User Commands"
.SH NAME
maqao \- manual page for maqao module.
.SH SYNOPSIS
maqao <command>|<script.lua> [...]
.SH DESCRIPTION
MAQAO (Modular Assembly Quality Analyzer and Optimizer) is a tool for application performance analysis that deals directly with the target code's binary file. The current version handles the following architectures:   - x86_64
.SH OPTIONS
.TP
\fB<command>\fR
<command> can be a built-in module or a user module. Modules can also have their own options, listed through <command> --help. This printout covers only built-in modules. The list of available modules can be obtained using maqao --list-modules.  Available values are: 
.TP 20 
\fB       analyze\fR 
Displays the results of the static analysis of a binary.
.TP 20 
\fB       cqa\fR 
The Code Quality Analyzer module provides users with high level reports covering vectorization and assembly code quality issues. Also, hints and possible workarounds related to a set of given loops or functions.
.TP 20 
\fB       lprof\fR 
The Lightweight Profiler provides a list of hot functions and loops.
.TP 20 
\fB       madras\fR 
MAQAO's disassembler, patcher and binary operations handler.
.TP 20 
\fB       oneview\fR 
A user friendly report generator that orchestrates multiple MAQAO modules for an in-depth analysis of the target binary.
.
.SH ""
.TP
\fB<script.lua>\fR
A user LUA script. The script file name must end with the extension ".lua"
.TP
\fB\-\-list-modules\fR
List all available modules and aliases.
.TP
\fB\-\-list-procs\fR
List all available processor models to use with the proc=<proc> parameter.
.TP
\fB\-\-detect-proc\fR
Detect the local processor type and micro-architecture.
.SH "    CREATE A MODULE"
.TP
\fB\-\-module-skeleton\fR
Create a skeleton for a new module.
.TP
\fB\-\-mod\fR\=<module>
Specify the name of the module.
.TP
\fB\-\-output\fR\=<path>
Path where the skeleton must be created. Default path is $PWD.
.SH "    HANDLE COMPLETION"
.TP
\fB\-\-generate-complete\fR
Create a bash script containing functions for completion and update the .bashrc file to load it (if possible).
.TP
\fB\-\-no-bashrc\fR
Discards --generate-complete .bashrc file update. Instead, the bash code is displayed on the standard output.
.TP
\fB\-\-unload-complete\fR
Remove code used to handle completion for MAQAO from the .bashrc and remove $HOME/.maqao_complete.sh.
.SH "    MAN PAGE"
.TP
\fB\-\-generate-man\fR
Generate the man page of the module based on the module help in the current directory. The generated file is called maqao-<module>.1. Once the man page is generated, the program exits.
.TP
\fB\-\-output\fR\=<path>
Specify the path where the man page is generated.
.TP
\fB\-\-generate-wiki\fR
Generate the wiki page of the module based on the module help on the standard output. Once the man page is generated, the program exits.
.SH "    OPTIONAL FLAGS COMMON TO ALL MODULES"
.TP
\fB\-\-disable-debug\fR
Disable debug data loading. WARNING, this option may alter the tool's accuracy.
.TP
\fB\-\-compiler\fR\=<compiler>
Select the compiler used to create the binary. Available values are: 
GNU, Intel.

.TP
\fB\-\-language\fR\=<language>
Select the source language. Available values are: 
c, c++, fortran.

.TP
\fB\-\-lcore-flow-all\fR
Analyze all instructions returned by MADRAS. Default behaviour is to analyze instructions from sections .text, .init, .fini and .madras.code. 
.TP
\fB\-\-uarch\fR\=<uarch>
Select the micro architecture used for analysis. Available values are: 
.TP 20 
\fB       For x86_64 architecture:\fR 
CORE (CORE2_65), ENHANCED_CORE (CORE2_45), NEHALEM (NHM), WESTMERE, SANDY_BRIDGE (SNB), IVY_BRIDGE (IVB),             IVY_BRIDGE_E (IVBE), HASWELL (HWL), BROADWELL (BWL), SKYLAKE, ICELAKE, ICELAKE_SP,             TIGER_LAKE, ROCKET_LAKE, ALDER_LAKE, SAPPHIRE_RAPIDS, RAPTOR_LAKE, HASWELL_E (HWLE),             KNIGHTS_LANDING (KNL), KNIGHTS_MILL (KNM), KABY_LAKE, COMET_LAKE, ZEN_V1 (ZEN), ZEN_PLUS (ZEN+),             ZEN_V2 (ZEN2), ZEN_V3 (ZEN3)
.
.SH ""
.TP
\fB\-\-proc\fR\=<proc>
Select the processor model used for analysis. maqao --list-procs to display supported processors
.TP
\fB\-ifr\fR, \fB\-\-interleaved-functions-recognition\fR\=<mode>
Select the mode of interleaved functions recognition. Available values are: 
.TP 20 
\fB       off\fR 
Functions are not extracted from connected components.
.TP 20 
\fB       debug_based\fR  (default)
Functions are extracted from connected components matching with debug data.
.TP 20 
\fB       all\fR 
All connected components are extracted into new functions whether they correspond to the debug information or not.
.
.SH ""
.TP
\fB\-dbg\fR, \fB\-\-debug\fR[\=<level>]
Enable debug messages. <level> can be used to specify the level of debug messages to display. Available values are: 
0, 1 (default).

.TP
\fB\-\-\fR
Specify binary parameters for dynamic analysis. Next options are ignored by MAQAO.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print the current help.
.TP
\fB\-v\fR, \fB\-\-version\fR
Print the current version.
.SH EXAMPLES
.TP
$ maqao cqa
Run CQA static analysis module and print usage
.TP
$ maqao script.lua
Run a lua script through MAQAO's embedded Lua interpreter
.SH AUTHOR
Written by The MAQAO team.
.SH "REPORTING BUGS"
Report bugs to <contact@maqao.org>.
.SH COPYRIGHT
MAQAO (C), 2004-2022 Universite de Versailles Saint-Quentin-en-Yvelines (UVSQ), 
is distributed under the GNU Lesser General Public License (GNU LGPL). MAQAO is 
free software; you can use it under the terms of the GNU Lesser General 
Public License as published by the Free Software Foundation; either version 2.1 
of the License, or (at your option) any later version. This software is distributed 
in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU Lesser General Public License for more details.

The full legal text of the GNU Lesser General Public License (GNU LGPL) is available
at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
.SH "SEE ALSO"
maqao-madras(1), maqao-disass(1), maqao-cqa(1), maqao-oneview(1), maqao-analyze(1), maqao-mil2(1), maqao-otter(1), maqao-mil(1), maqao-lprof(1)
